//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1

import (
	json "encoding/json"

	rollalgorithm "github.com/alibaba/kube-sharding/pkg/rollalgorithm"
	appsv1 "k8s.io/api/apps/v1"
	corev1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	intstr "k8s.io/apimachinery/pkg/util/intstr"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActivePlan) DeepCopyInto(out *ActivePlan) {
	*out = *in
	if in.ScaleSchedulePlan != nil {
		in, out := &in.ScaleSchedulePlan, &out.ScaleSchedulePlan
		*out = new(ScaleSchedulePlan)
		(*in).DeepCopyInto(*out)
	}
	if in.ScaleConfig != nil {
		in, out := &in.ScaleConfig, &out.ScaleConfig
		*out = new(ScaleConfig)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActivePlan.
func (in *ActivePlan) DeepCopy() *ActivePlan {
	if in == nil {
		return nil
	}
	out := new(ActivePlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocatorSyncedStatus) DeepCopyInto(out *AllocatorSyncedStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocatorSyncedStatus.
func (in *AllocatorSyncedStatus) DeepCopy() *AllocatorSyncedStatus {
	if in == nil {
		return nil
	}
	out := new(AllocatorSyncedStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupOfPod) DeepCopyInto(out *BackupOfPod) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupOfPod.
func (in *BackupOfPod) DeepCopy() *BackupOfPod {
	if in == nil {
		return nil
	}
	out := new(BackupOfPod)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BroadcastPlan) DeepCopyInto(out *BroadcastPlan) {
	*out = *in
	in.WorkerSchedulePlan.DeepCopyInto(&out.WorkerSchedulePlan)
	if in.Online != nil {
		in, out := &in.Online, &out.Online
		*out = new(bool)
		**out = **in
	}
	if in.UpdatingGracefully != nil {
		in, out := &in.UpdatingGracefully, &out.UpdatingGracefully
		*out = new(bool)
		**out = **in
	}
	if in.CPU != nil {
		in, out := &in.CPU, &out.CPU
		*out = new(int32)
		**out = **in
	}
	if in.RowComplete != nil {
		in, out := &in.RowComplete, &out.RowComplete
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BroadcastPlan.
func (in *BroadcastPlan) DeepCopy() *BroadcastPlan {
	if in == nil {
		return nil
	}
	out := new(BroadcastPlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrokenRecoverQuotaConfig) DeepCopyInto(out *BrokenRecoverQuotaConfig) {
	*out = *in
	if in.MaxFailedCount != nil {
		in, out := &in.MaxFailedCount, &out.MaxFailedCount
		*out = new(int32)
		**out = **in
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = new(int32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrokenRecoverQuotaConfig.
func (in *BrokenRecoverQuotaConfig) DeepCopy() *BrokenRecoverQuotaConfig {
	if in == nil {
		return nil
	}
	out := new(BrokenRecoverQuotaConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BufferDistribute) DeepCopyInto(out *BufferDistribute) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BufferDistribute.
func (in *BufferDistribute) DeepCopy() *BufferDistribute {
	if in == nil {
		return nil
	}
	out := new(BufferDistribute)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BufferDistributeRatio) DeepCopyInto(out *BufferDistributeRatio) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BufferDistributeRatio.
func (in *BufferDistributeRatio) DeepCopy() *BufferDistributeRatio {
	if in == nil {
		return nil
	}
	out := new(BufferDistributeRatio)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BufferPlan) DeepCopyInto(out *BufferPlan) {
	*out = *in
	if in.Distribute != nil {
		in, out := &in.Distribute, &out.Distribute
		*out = new(BufferDistribute)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BufferPlan.
func (in *BufferPlan) DeepCopy() *BufferPlan {
	if in == nil {
		return nil
	}
	out := new(BufferPlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Capacity) DeepCopyInto(out *Capacity) {
	*out = *in
	if in.Total != nil {
		in, out := &in.Total, &out.Total
		*out = new(int32)
		**out = **in
	}
	in.BufferPlan.DeepCopyInto(&out.BufferPlan)
	in.ActivePlan.DeepCopyInto(&out.ActivePlan)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Capacity.
func (in *Capacity) DeepCopy() *Capacity {
	if in == nil {
		return nil
	}
	out := new(Capacity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerConfig) DeepCopyInto(out *ContainerConfig) {
	*out = *in
	if in.Ulimits != nil {
		in, out := &in.Ulimits, &out.Ulimits
		*out = make([]Ulimit, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerConfig.
func (in *ContainerConfig) DeepCopy() *ContainerConfig {
	if in == nil {
		return nil
	}
	out := new(ContainerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerHippoExterned) DeepCopyInto(out *ContainerHippoExterned) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]Device, len(*in))
		copy(*out, *in)
	}
	if in.Configs != nil {
		in, out := &in.Configs, &out.Configs
		*out = new(ContainerConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerHippoExterned.
func (in *ContainerHippoExterned) DeepCopy() *ContainerHippoExterned {
	if in == nil {
		return nil
	}
	out := new(ContainerHippoExterned)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerHippoExternedWithName) DeepCopyInto(out *ContainerHippoExternedWithName) {
	*out = *in
	in.ContainerHippoExterned.DeepCopyInto(&out.ContainerHippoExterned)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerHippoExternedWithName.
func (in *ContainerHippoExternedWithName) DeepCopy() *ContainerHippoExternedWithName {
	if in == nil {
		return nil
	}
	out := new(ContainerHippoExternedWithName)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerInstanceField) DeepCopyInto(out *ContainerInstanceField) {
	*out = *in
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]corev1.ContainerPort, len(*in))
		copy(*out, *in)
	}
	if in.EnvFrom != nil {
		in, out := &in.EnvFrom, &out.EnvFrom
		*out = make([]corev1.EnvFromSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]corev1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]corev1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeDevices != nil {
		in, out := &in.VolumeDevices, &out.VolumeDevices
		*out = make([]corev1.VolumeDevice, len(*in))
		copy(*out, *in)
	}
	if in.Lifecycle != nil {
		in, out := &in.Lifecycle, &out.Lifecycle
		*out = new(LifecycleInstanceField)
		(*in).DeepCopyInto(*out)
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.HostConfig != nil {
		in, out := &in.HostConfig, &out.HostConfig
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]Device, len(*in))
		copy(*out, *in)
	}
	if in.Configs != nil {
		in, out := &in.Configs, &out.Configs
		*out = new(ContainerConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerInstanceField.
func (in *ContainerInstanceField) DeepCopy() *ContainerInstanceField {
	if in == nil {
		return nil
	}
	out := new(ContainerInstanceField)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerResource) DeepCopyInto(out *ContainerResource) {
	*out = *in
	in.Resources.DeepCopyInto(&out.Resources)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerResource.
func (in *ContainerResource) DeepCopy() *ContainerResource {
	if in == nil {
		return nil
	}
	out := new(ContainerResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerStatusHippoExterned) DeepCopyInto(out *ContainerStatusHippoExterned) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerStatusHippoExterned.
func (in *ContainerStatusHippoExterned) DeepCopy() *ContainerStatusHippoExterned {
	if in == nil {
		return nil
	}
	out := new(ContainerStatusHippoExterned)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in CopyTarget) DeepCopyInto(out *CopyTarget) {
	{
		in := &in
		*out = make(CopyTarget, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CopyTarget.
func (in CopyTarget) DeepCopy() CopyTarget {
	if in == nil {
		return nil
	}
	out := new(CopyTarget)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Detail) DeepCopyInto(out *Detail) {
	*out = *in
	if in.Scenes != nil {
		in, out := &in.Scenes, &out.Scenes
		*out = make([]SceneNode, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Detail.
func (in *Detail) DeepCopy() *Detail {
	if in == nil {
		return nil
	}
	out := new(Detail)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Device) DeepCopyInto(out *Device) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Device.
func (in *Device) DeepCopy() *Device {
	if in == nil {
		return nil
	}
	out := new(Device)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Extra) DeepCopyInto(out *Extra) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Extra.
func (in *Extra) DeepCopy() *Extra {
	if in == nil {
		return nil
	}
	out := new(Extra)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GeneralTemplate) DeepCopyInto(out *GeneralTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GeneralTemplate.
func (in *GeneralTemplate) DeepCopy() *GeneralTemplate {
	if in == nil {
		return nil
	}
	out := new(GeneralTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GrayPublisher) DeepCopyInto(out *GrayPublisher) {
	*out = *in
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(metav1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GrayPublisher.
func (in *GrayPublisher) DeepCopy() *GrayPublisher {
	if in == nil {
		return nil
	}
	out := new(GrayPublisher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in GroupVersionStatusMap) DeepCopyInto(out *GroupVersionStatusMap) {
	{
		in := &in
		*out = make(GroupVersionStatusMap, len(*in))
		for key, val := range *in {
			var outVal *rollalgorithm.VersionStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = (*in).DeepCopy()
			}
			(*out)[key] = outVal
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupVersionStatusMap.
func (in GroupVersionStatusMap) DeepCopy() GroupVersionStatusMap {
	if in == nil {
		return nil
	}
	out := new(GroupVersionStatusMap)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCheckerConfig) DeepCopyInto(out *HealthCheckerConfig) {
	*out = *in
	if in.Lv7Config != nil {
		in, out := &in.Lv7Config, &out.Lv7Config
		*out = new(Lv7HealthCheckerConfig)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCheckerConfig.
func (in *HealthCheckerConfig) DeepCopy() *HealthCheckerConfig {
	if in == nil {
		return nil
	}
	out := new(HealthCheckerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthCondition) DeepCopyInto(out *HealthCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	if in.Metas != nil {
		in, out := &in.Metas, &out.Metas
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthCondition.
func (in *HealthCondition) DeepCopy() *HealthCondition {
	if in == nil {
		return nil
	}
	out := new(HealthCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HippoContainer) DeepCopyInto(out *HippoContainer) {
	*out = *in
	in.Container.DeepCopyInto(&out.Container)
	in.ContainerHippoExterned.DeepCopyInto(&out.ContainerHippoExterned)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HippoContainer.
func (in *HippoContainer) DeepCopy() *HippoContainer {
	if in == nil {
		return nil
	}
	out := new(HippoContainer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HippoPodSpec) DeepCopyInto(out *HippoPodSpec) {
	*out = *in
	in.PodSpec.DeepCopyInto(&out.PodSpec)
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]HippoContainer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.HippoPodSpecExtendFields.DeepCopyInto(&out.HippoPodSpecExtendFields)
	if in.HippoVolumes != nil {
		in, out := &in.HippoVolumes, &out.HippoVolumes
		*out = make([]json.RawMessage, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(json.RawMessage, len(*in))
				copy(*out, *in)
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HippoPodSpec.
func (in *HippoPodSpec) DeepCopy() *HippoPodSpec {
	if in == nil {
		return nil
	}
	out := new(HippoPodSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HippoPodSpecExtend) DeepCopyInto(out *HippoPodSpecExtend) {
	*out = *in
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]ContainerHippoExternedWithName, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.HippoPodSpecExtendFields.DeepCopyInto(&out.HippoPodSpecExtendFields)
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]Device, len(*in))
		copy(*out, *in)
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]json.RawMessage, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(json.RawMessage, len(*in))
				copy(*out, *in)
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HippoPodSpecExtend.
func (in *HippoPodSpecExtend) DeepCopy() *HippoPodSpecExtend {
	if in == nil {
		return nil
	}
	out := new(HippoPodSpecExtend)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HippoPodSpecExtendFields) DeepCopyInto(out *HippoPodSpecExtendFields) {
	*out = *in
	if in.CPUShareNum != nil {
		in, out := &in.CPUShareNum, &out.CPUShareNum
		*out = new(int32)
		**out = **in
	}
	if in.PackageInfos != nil {
		in, out := &in.PackageInfos, &out.PackageInfos
		*out = make([]PackageInfo, len(*in))
		copy(*out, *in)
	}
	if in.RestartWithoutRemove != nil {
		in, out := &in.RestartWithoutRemove, &out.RestartWithoutRemove
		*out = new(bool)
		**out = **in
	}
	if in.NeedHippoMounts != nil {
		in, out := &in.NeedHippoMounts, &out.NeedHippoMounts
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HippoPodSpecExtendFields.
func (in *HippoPodSpecExtendFields) DeepCopy() *HippoPodSpecExtendFields {
	if in == nil {
		return nil
	}
	out := new(HippoPodSpecExtendFields)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HippoPodTemplate) DeepCopyInto(out *HippoPodTemplate) {
	*out = *in
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HippoPodTemplate.
func (in *HippoPodTemplate) DeepCopy() *HippoPodTemplate {
	if in == nil {
		return nil
	}
	out := new(HippoPodTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HippoSlotID) DeepCopyInto(out *HippoSlotID) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HippoSlotID.
func (in *HippoSlotID) DeepCopy() *HippoSlotID {
	if in == nil {
		return nil
	}
	out := new(HippoSlotID)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPNode) DeepCopyInto(out *IPNode) {
	*out = *in
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = make([]int32, len(*in))
		copy(*out, *in)
	}
	if in.HealthMeta != nil {
		in, out := &in.HealthMeta, &out.HealthMeta
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.BizMeta != nil {
		in, out := &in.BizMeta, &out.BizMeta
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPNode.
func (in *IPNode) DeepCopy() *IPNode {
	if in == nil {
		return nil
	}
	out := new(IPNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeysMayBeAdjust) DeepCopyInto(out *KeysMayBeAdjust) {
	*out = *in
	if in.VolumeKeys != nil {
		in, out := &in.VolumeKeys, &out.VolumeKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TolerationKeys != nil {
		in, out := &in.TolerationKeys, &out.TolerationKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.LableKeys != nil {
		in, out := &in.LableKeys, &out.LableKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AnnotationKeys != nil {
		in, out := &in.AnnotationKeys, &out.AnnotationKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ResKeys != nil {
		in, out := &in.ResKeys, &out.ResKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ContainerKeys != nil {
		in, out := &in.ContainerKeys, &out.ContainerKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.InitContainerKeys != nil {
		in, out := &in.InitContainerKeys, &out.InitContainerKeys
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.WithWorkingDirContainers != nil {
		in, out := &in.WithWorkingDirContainers, &out.WithWorkingDirContainers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeysMayBeAdjust.
func (in *KeysMayBeAdjust) DeepCopy() *KeysMayBeAdjust {
	if in == nil {
		return nil
	}
	out := new(KeysMayBeAdjust)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsCopy) DeepCopyInto(out *LabelsCopy) {
	*out = *in
	if in.WorkerLabels != nil {
		in, out := &in.WorkerLabels, &out.WorkerLabels
		*out = make(CopyTarget, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.WorkerAnnotations != nil {
		in, out := &in.WorkerAnnotations, &out.WorkerAnnotations
		*out = make(CopyTarget, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.PodLabels != nil {
		in, out := &in.PodLabels, &out.PodLabels
		*out = make(CopyTarget, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.PodAnnotations != nil {
		in, out := &in.PodAnnotations, &out.PodAnnotations
		*out = make(CopyTarget, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsCopy.
func (in *LabelsCopy) DeepCopy() *LabelsCopy {
	if in == nil {
		return nil
	}
	out := new(LabelsCopy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LifecycleInstanceField) DeepCopyInto(out *LifecycleInstanceField) {
	*out = *in
	if in.PostStart != nil {
		in, out := &in.PostStart, &out.PostStart
		*out = new(corev1.LifecycleHandler)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LifecycleInstanceField.
func (in *LifecycleInstanceField) DeepCopy() *LifecycleInstanceField {
	if in == nil {
		return nil
	}
	out := new(LifecycleInstanceField)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Lv7HealthCheckerConfig) DeepCopyInto(out *Lv7HealthCheckerConfig) {
	*out = *in
	out.Port = in.Port
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Lv7HealthCheckerConfig.
func (in *Lv7HealthCheckerConfig) DeepCopy() *Lv7HealthCheckerConfig {
	if in == nil {
		return nil
	}
	out := new(Lv7HealthCheckerConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceMigration) DeepCopyInto(out *NamespaceMigration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceMigration.
func (in *NamespaceMigration) DeepCopy() *NamespaceMigration {
	if in == nil {
		return nil
	}
	out := new(NamespaceMigration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespaceMigration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceMigrationList) DeepCopyInto(out *NamespaceMigrationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NamespaceMigration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceMigrationList.
func (in *NamespaceMigrationList) DeepCopy() *NamespaceMigrationList {
	if in == nil {
		return nil
	}
	out := new(NamespaceMigrationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NamespaceMigrationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceMigrationSpec) DeepCopyInto(out *NamespaceMigrationSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceMigrationSpec.
func (in *NamespaceMigrationSpec) DeepCopy() *NamespaceMigrationSpec {
	if in == nil {
		return nil
	}
	out := new(NamespaceMigrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespaceMigrationStatus) DeepCopyInto(out *NamespaceMigrationStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespaceMigrationStatus.
func (in *NamespaceMigrationStatus) DeepCopy() *NamespaceMigrationStatus {
	if in == nil {
		return nil
	}
	out := new(NamespaceMigrationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackageDetail) DeepCopyInto(out *PackageDetail) {
	*out = *in
	out.Extra = in.Extra
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackageDetail.
func (in *PackageDetail) DeepCopy() *PackageDetail {
	if in == nil {
		return nil
	}
	out := new(PackageDetail)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackageInfo) DeepCopyInto(out *PackageInfo) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackageInfo.
func (in *PackageInfo) DeepCopy() *PackageInfo {
	if in == nil {
		return nil
	}
	out := new(PackageInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PackageStatus) DeepCopyInto(out *PackageStatus) {
	*out = *in
	if in.PackageDetails != nil {
		in, out := &in.PackageDetails, &out.PackageDetails
		*out = make([]PackageDetail, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PackageStatus.
func (in *PackageStatus) DeepCopy() *PackageStatus {
	if in == nil {
		return nil
	}
	out := new(PackageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Patch) DeepCopyInto(out *Patch) {
	*out = *in
	if in.Patch != nil {
		in, out := &in.Patch, &out.Patch
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Patch.
func (in *Patch) DeepCopy() *Patch {
	if in == nil {
		return nil
	}
	out := new(Patch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodInstanceField) DeepCopyInto(out *PodInstanceField) {
	*out = *in
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]ContainerInstanceField, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PackageInfos != nil {
		in, out := &in.PackageInfos, &out.PackageInfos
		*out = make([]PackageInfo, len(*in))
		copy(*out, *in)
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]corev1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CPUShareNum != nil {
		in, out := &in.CPUShareNum, &out.CPUShareNum
		*out = new(int32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodInstanceField.
func (in *PodInstanceField) DeepCopy() *PodInstanceField {
	if in == nil {
		return nil
	}
	out := new(PodInstanceField)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodResource) DeepCopyInto(out *PodResource) {
	*out = *in
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]ContainerResource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NodeSelector != nil {
		in, out := &in.NodeSelector, &out.NodeSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(corev1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]corev1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(int32)
		**out = **in
	}
	if in.CPUShareNum != nil {
		in, out := &in.CPUShareNum, &out.CPUShareNum
		*out = new(int32)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodResource.
func (in *PodResource) DeepCopy() *PodResource {
	if in == nil {
		return nil
	}
	out := new(PodResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodStandbyStatus) DeepCopyInto(out *PodStandbyStatus) {
	*out = *in
	if in.StandbyHours != nil {
		in, out := &in.StandbyHours, &out.StandbyHours
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodStandbyStatus.
func (in *PodStandbyStatus) DeepCopy() *PodStandbyStatus {
	if in == nil {
		return nil
	}
	out := new(PodStandbyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodStatusExtend) DeepCopyInto(out *PodStatusExtend) {
	*out = *in
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]ContainerStatusHippoExterned, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodStatusExtend.
func (in *PodStatusExtend) DeepCopy() *PodStatusExtend {
	if in == nil {
		return nil
	}
	out := new(PodStatusExtend)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Replica) DeepCopyInto(out *Replica) {
	*out = *in
	in.WorkerNode.DeepCopyInto(&out.WorkerNode)
	in.Backup.DeepCopyInto(&out.Backup)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Replica.
func (in *Replica) DeepCopy() *Replica {
	if in == nil {
		return nil
	}
	out := new(Replica)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Replica) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicaStatus) DeepCopyInto(out *ReplicaStatus) {
	*out = *in
	if in.CurWorkerNode != nil {
		in, out := &in.CurWorkerNode, &out.CurWorkerNode
		*out = new(ReplicaWorkerNode)
		(*in).DeepCopyInto(*out)
	}
	if in.BackupWorkerNode != nil {
		in, out := &in.BackupWorkerNode, &out.BackupWorkerNode
		*out = new(ReplicaWorkerNode)
		(*in).DeepCopyInto(*out)
	}
	in.Detail.DeepCopyInto(&out.Detail)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicaStatus.
func (in *ReplicaStatus) DeepCopy() *ReplicaStatus {
	if in == nil {
		return nil
	}
	out := new(ReplicaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicaWorkerNode) DeepCopyInto(out *ReplicaWorkerNode) {
	*out = *in
	if in.WorkerNodeStatus != nil {
		in, out := &in.WorkerNodeStatus, &out.WorkerNodeStatus
		*out = new(WorkerNodeStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicaWorkerNode.
func (in *ReplicaWorkerNode) DeepCopy() *ReplicaWorkerNode {
	if in == nil {
		return nil
	}
	out := new(ReplicaWorkerNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollingSet) DeepCopyInto(out *RollingSet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollingSet.
func (in *RollingSet) DeepCopy() *RollingSet {
	if in == nil {
		return nil
	}
	out := new(RollingSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RollingSet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollingSetList) DeepCopyInto(out *RollingSetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RollingSet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollingSetList.
func (in *RollingSetList) DeepCopy() *RollingSetList {
	if in == nil {
		return nil
	}
	out := new(RollingSetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RollingSetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollingSetSpec) DeepCopyInto(out *RollingSetSpec) {
	*out = *in
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(metav1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	in.SchedulePlan.DeepCopyInto(&out.SchedulePlan)
	if in.ScaleSchedulePlan != nil {
		in, out := &in.ScaleSchedulePlan, &out.ScaleSchedulePlan
		*out = new(ScaleSchedulePlan)
		(*in).DeepCopyInto(*out)
	}
	if in.ScaleConfig != nil {
		in, out := &in.ScaleConfig, &out.ScaleConfig
		*out = new(ScaleConfig)
		**out = **in
	}
	in.Capacity.DeepCopyInto(&out.Capacity)
	if in.DaemonSetReplicas != nil {
		in, out := &in.DaemonSetReplicas, &out.DaemonSetReplicas
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.SubRSLatestVersionRatio != nil {
		in, out := &in.SubRSLatestVersionRatio, &out.SubRSLatestVersionRatio
		*out = new(map[string]int32)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]int32, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.GroupRS != nil {
		in, out := &in.GroupRS, &out.GroupRS
		*out = new(string)
		**out = **in
	}
	in.VersionPlan.DeepCopyInto(&out.VersionPlan)
	if in.HealthCheckerConfig != nil {
		in, out := &in.HealthCheckerConfig, &out.HealthCheckerConfig
		*out = new(HealthCheckerConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollingSetSpec.
func (in *RollingSetSpec) DeepCopy() *RollingSetSpec {
	if in == nil {
		return nil
	}
	out := new(RollingSetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollingSetStatus) DeepCopyInto(out *RollingSetStatus) {
	*out = *in
	if in.UnAssignedWorkers != nil {
		in, out := &in.UnAssignedWorkers, &out.UnAssignedWorkers
		*out = make(map[string]int32, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]appsv1.DeploymentCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.LastUpdateStatusTime.DeepCopyInto(&out.LastUpdateStatusTime)
	if in.GroupVersionStatusMap != nil {
		in, out := &in.GroupVersionStatusMap, &out.GroupVersionStatusMap
		*out = make(GroupVersionStatusMap, len(*in))
		for key, val := range *in {
			var outVal *rollalgorithm.VersionStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = (*in).DeepCopy()
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceVersionStatusMap != nil {
		in, out := &in.ResourceVersionStatusMap, &out.ResourceVersionStatusMap
		*out = make(map[string]*rollalgorithm.ResourceVersionStatus, len(*in))
		for key, val := range *in {
			var outVal *rollalgorithm.ResourceVersionStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = (*in).DeepCopy()
			}
			(*out)[key] = outVal
		}
	}
	if in.UncompleteReplicaInfo != nil {
		in, out := &in.UncompleteReplicaInfo, &out.UncompleteReplicaInfo
		*out = make(map[string]ProcessStep, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.SubrsVersionStatusMap != nil {
		in, out := &in.SubrsVersionStatusMap, &out.SubrsVersionStatusMap
		*out = make(SubrsVersionStatusMap, len(*in))
		for key, val := range *in {
			var outVal map[string]*rollalgorithm.VersionStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(GroupVersionStatusMap, len(*in))
				for key, val := range *in {
					var outVal *rollalgorithm.VersionStatus
					if val == nil {
						(*out)[key] = nil
					} else {
						in, out := &val, &outVal
						*out = (*in).DeepCopy()
					}
					(*out)[key] = outVal
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.SubrsTargetReplicas != nil {
		in, out := &in.SubrsTargetReplicas, &out.SubrsTargetReplicas
		*out = make(map[string]*int32, len(*in))
		for key, val := range *in {
			var outVal *int32
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(int32)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	in.SpotInstanceStatus.DeepCopyInto(&out.SpotInstanceStatus)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollingSetStatus.
func (in *RollingSetStatus) DeepCopy() *RollingSetStatus {
	if in == nil {
		return nil
	}
	out := new(RollingSetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollingsetHippoExterned) DeepCopyInto(out *RollingsetHippoExterned) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollingsetHippoExterned.
func (in *RollingsetHippoExterned) DeepCopy() *RollingsetHippoExterned {
	if in == nil {
		return nil
	}
	out := new(RollingsetHippoExterned)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollingsetPatch) DeepCopyInto(out *RollingsetPatch) {
	*out = *in
	if in.Patch != nil {
		in, out := &in.Patch, &out.Patch
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollingsetPatch.
func (in *RollingsetPatch) DeepCopy() *RollingsetPatch {
	if in == nil {
		return nil
	}
	out := new(RollingsetPatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RollingsetVerbose) DeepCopyInto(out *RollingsetVerbose) {
	*out = *in
	if in.SubrsMetas != nil {
		in, out := &in.SubrsMetas, &out.SubrsMetas
		*out = make(SubrsMetas, len(*in))
		for key, val := range *in {
			var outVal map[string]string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(map[string]string, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(RollingSetStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = make([]*ReplicaStatus, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(ReplicaStatus)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RollingsetVerbose.
func (in *RollingsetVerbose) DeepCopy() *RollingsetVerbose {
	if in == nil {
		return nil
	}
	out := new(RollingsetVerbose)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleConfig) DeepCopyInto(out *ScaleConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleConfig.
func (in *ScaleConfig) DeepCopy() *ScaleConfig {
	if in == nil {
		return nil
	}
	out := new(ScaleConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleParameters) DeepCopyInto(out *ScaleParameters) {
	*out = *in
	if in.StandByRatioMap != nil {
		in, out := &in.StandByRatioMap, &out.StandByRatioMap
		*out = make(map[WorkerModeType]int, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleParameters.
func (in *ScaleParameters) DeepCopy() *ScaleParameters {
	if in == nil {
		return nil
	}
	out := new(ScaleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScaleSchedulePlan) DeepCopyInto(out *ScaleSchedulePlan) {
	*out = *in
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int32)
		**out = **in
	}
	in.Strategy.DeepCopyInto(&out.Strategy)
	if in.ResourceRequests != nil {
		in, out := &in.ResourceRequests, &out.ResourceRequests
		*out = make(corev1.ResourceList, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScaleSchedulePlan.
func (in *ScaleSchedulePlan) DeepCopy() *ScaleSchedulePlan {
	if in == nil {
		return nil
	}
	out := new(ScaleSchedulePlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SceneNode) DeepCopyInto(out *SceneNode) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SceneNode.
func (in *SceneNode) DeepCopy() *SceneNode {
	if in == nil {
		return nil
	}
	out := new(SceneNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleStatusExtend) DeepCopyInto(out *ScheduleStatusExtend) {
	*out = *in
	out.SlotID = in.SlotID
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleStatusExtend.
func (in *ScheduleStatusExtend) DeepCopy() *ScheduleStatusExtend {
	if in == nil {
		return nil
	}
	out := new(ScheduleStatusExtend)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceCondition) DeepCopyInto(out *ServiceCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceCondition.
func (in *ServiceCondition) DeepCopy() *ServiceCondition {
	if in == nil {
		return nil
	}
	out := new(ServiceCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePublisher) DeepCopyInto(out *ServicePublisher) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePublisher.
func (in *ServicePublisher) DeepCopy() *ServicePublisher {
	if in == nil {
		return nil
	}
	out := new(ServicePublisher)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePublisher) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePublisherList) DeepCopyInto(out *ServicePublisherList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServicePublisher, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePublisherList.
func (in *ServicePublisherList) DeepCopy() *ServicePublisherList {
	if in == nil {
		return nil
	}
	out := new(ServicePublisherList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicePublisherList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePublisherSpec) DeepCopyInto(out *ServicePublisherSpec) {
	*out = *in
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.RegistryConf != nil {
		in, out := &in.RegistryConf, &out.RegistryConf
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePublisherSpec.
func (in *ServicePublisherSpec) DeepCopy() *ServicePublisherSpec {
	if in == nil {
		return nil
	}
	out := new(ServicePublisherSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePublisherStatus) DeepCopyInto(out *ServicePublisherStatus) {
	*out = *in
	if in.IPList != nil {
		in, out := &in.IPList, &out.IPList
		*out = make([]IPNode, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPs != nil {
		in, out := &in.IPs, &out.IPs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.LastUpdateStatusTime.DeepCopyInto(&out.LastUpdateStatusTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePublisherStatus.
func (in *ServicePublisherStatus) DeepCopy() *ServicePublisherStatus {
	if in == nil {
		return nil
	}
	out := new(ServicePublisherStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardGroup) DeepCopyInto(out *ShardGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardGroup.
func (in *ShardGroup) DeepCopy() *ShardGroup {
	if in == nil {
		return nil
	}
	out := new(ShardGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShardGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardGroupList) DeepCopyInto(out *ShardGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ShardGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardGroupList.
func (in *ShardGroupList) DeepCopy() *ShardGroupList {
	if in == nil {
		return nil
	}
	out := new(ShardGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShardGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardGroupSignSpec) DeepCopyInto(out *ShardGroupSignSpec) {
	*out = *in
	if in.RestartAfterResourceChange != nil {
		in, out := &in.RestartAfterResourceChange, &out.RestartAfterResourceChange
		*out = new(bool)
		**out = **in
	}
	if in.ShardTemplates != nil {
		in, out := &in.ShardTemplates, &out.ShardTemplates
		*out = make(map[string]ShardSignTemplate, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardGroupSignSpec.
func (in *ShardGroupSignSpec) DeepCopy() *ShardGroupSignSpec {
	if in == nil {
		return nil
	}
	out := new(ShardGroupSignSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardGroupSpec) DeepCopyInto(out *ShardGroupSpec) {
	*out = *in
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(metav1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.LatestPercent != nil {
		in, out := &in.LatestPercent, &out.LatestPercent
		*out = new(int32)
		**out = **in
	}
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.MaxSurge != nil {
		in, out := &in.MaxSurge, &out.MaxSurge
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.ScaleStrategy != nil {
		in, out := &in.ScaleStrategy, &out.ScaleStrategy
		*out = new(appsv1.DeploymentStrategy)
		(*in).DeepCopyInto(*out)
	}
	if in.ScaleConfig != nil {
		in, out := &in.ScaleConfig, &out.ScaleConfig
		*out = new(ScaleConfig)
		**out = **in
	}
	in.WorkerSchedulePlan.DeepCopyInto(&out.WorkerSchedulePlan)
	if in.UpdatingGracefully != nil {
		in, out := &in.UpdatingGracefully, &out.UpdatingGracefully
		*out = new(bool)
		**out = **in
	}
	if in.RestartAfterResourceChange != nil {
		in, out := &in.RestartAfterResourceChange, &out.RestartAfterResourceChange
		*out = new(bool)
		**out = **in
	}
	if in.ShardTemplates != nil {
		in, out := &in.ShardTemplates, &out.ShardTemplates
		*out = make(map[string]ShardTemplate, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.Extension != nil {
		in, out := &in.Extension, &out.Extension
		*out = make(map[string]json.RawMessage, len(*in))
		for key, val := range *in {
			var outVal []byte
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(json.RawMessage, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardGroupSpec.
func (in *ShardGroupSpec) DeepCopy() *ShardGroupSpec {
	if in == nil {
		return nil
	}
	out := new(ShardGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardGroupStatus) DeepCopyInto(out *ShardGroupStatus) {
	*out = *in
	if in.ShardNames != nil {
		in, out := &in.ShardNames, &out.ShardNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OnceCompletedShardNames != nil {
		in, out := &in.OnceCompletedShardNames, &out.OnceCompletedShardNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.LastUpdateStatusTime.DeepCopyInto(&out.LastUpdateStatusTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardGroupStatus.
func (in *ShardGroupStatus) DeepCopy() *ShardGroupStatus {
	if in == nil {
		return nil
	}
	out := new(ShardGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardSignSpec) DeepCopyInto(out *ShardSignSpec) {
	*out = *in
	in.Template.DeepCopyInto(&out.Template)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardSignSpec.
func (in *ShardSignSpec) DeepCopy() *ShardSignSpec {
	if in == nil {
		return nil
	}
	out := new(ShardSignSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardSignTemplate) DeepCopyInto(out *ShardSignTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardSignTemplate.
func (in *ShardSignTemplate) DeepCopy() *ShardSignTemplate {
	if in == nil {
		return nil
	}
	out := new(ShardSignTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardSpec) DeepCopyInto(out *ShardSpec) {
	*out = *in
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int32)
		**out = **in
	}
	if in.DependencyLevel != nil {
		in, out := &in.DependencyLevel, &out.DependencyLevel
		*out = new(int32)
		**out = **in
	}
	if in.Strategy != nil {
		in, out := &in.Strategy, &out.Strategy
		*out = new(appsv1.DeploymentStrategy)
		(*in).DeepCopyInto(*out)
	}
	in.Template.DeepCopyInto(&out.Template)
	if in.HealthCheckerConfig != nil {
		in, out := &in.HealthCheckerConfig, &out.HealthCheckerConfig
		*out = new(HealthCheckerConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Online != nil {
		in, out := &in.Online, &out.Online
		*out = new(bool)
		**out = **in
	}
	if in.UpdatingGracefully != nil {
		in, out := &in.UpdatingGracefully, &out.UpdatingGracefully
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardSpec.
func (in *ShardSpec) DeepCopy() *ShardSpec {
	if in == nil {
		return nil
	}
	out := new(ShardSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShardTemplate) DeepCopyInto(out *ShardTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShardTemplate.
func (in *ShardTemplate) DeepCopy() *ShardTemplate {
	if in == nil {
		return nil
	}
	out := new(ShardTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SignedVersionPlan) DeepCopyInto(out *SignedVersionPlan) {
	*out = *in
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(HippoPodTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.RestartAfterResourceChange != nil {
		in, out := &in.RestartAfterResourceChange, &out.RestartAfterResourceChange
		*out = new(bool)
		**out = **in
	}
	if in.BufferSelector != nil {
		in, out := &in.BufferSelector, &out.BufferSelector
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SignedVersionPlan.
func (in *SignedVersionPlan) DeepCopy() *SignedVersionPlan {
	if in == nil {
		return nil
	}
	out := new(SignedVersionPlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SkylinePublisherConf) DeepCopyInto(out *SkylinePublisherConf) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SkylinePublisherConf.
func (in *SkylinePublisherConf) DeepCopy() *SkylinePublisherConf {
	if in == nil {
		return nil
	}
	out := new(SkylinePublisherConf)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpotStatus) DeepCopyInto(out *SpotStatus) {
	*out = *in
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpotStatus.
func (in *SpotStatus) DeepCopy() *SpotStatus {
	if in == nil {
		return nil
	}
	out := new(SpotStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Spread) DeepCopyInto(out *Spread) {
	*out = *in
	in.Active.DeepCopyInto(&out.Active)
	in.Inactive.DeepCopyInto(&out.Inactive)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Spread.
func (in *Spread) DeepCopy() *Spread {
	if in == nil {
		return nil
	}
	out := new(Spread)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpreadPatch) DeepCopyInto(out *SpreadPatch) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpreadPatch.
func (in *SpreadPatch) DeepCopy() *SpreadPatch {
	if in == nil {
		return nil
	}
	out := new(SpreadPatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subrs) DeepCopyInto(out *Subrs) {
	*out = *in
	if in.Metas != nil {
		in, out := &in.Metas, &out.Metas
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subrs.
func (in *Subrs) DeepCopy() *Subrs {
	if in == nil {
		return nil
	}
	out := new(Subrs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in SubrsMetas) DeepCopyInto(out *SubrsMetas) {
	{
		in := &in
		*out = make(SubrsMetas, len(*in))
		for key, val := range *in {
			var outVal map[string]string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(map[string]string, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
			(*out)[key] = outVal
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubrsMetas.
func (in SubrsMetas) DeepCopy() SubrsMetas {
	if in == nil {
		return nil
	}
	out := new(SubrsMetas)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in SubrsVersionStatusMap) DeepCopyInto(out *SubrsVersionStatusMap) {
	{
		in := &in
		*out = make(SubrsVersionStatusMap, len(*in))
		for key, val := range *in {
			var outVal map[string]*rollalgorithm.VersionStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(GroupVersionStatusMap, len(*in))
				for key, val := range *in {
					var outVal *rollalgorithm.VersionStatus
					if val == nil {
						(*out)[key] = nil
					} else {
						in, out := &val, &outVal
						*out = (*in).DeepCopy()
					}
					(*out)[key] = outVal
				}
			}
			(*out)[key] = outVal
		}
		return
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubrsVersionStatusMap.
func (in SubrsVersionStatusMap) DeepCopy() SubrsVersionStatusMap {
	if in == nil {
		return nil
	}
	out := new(SubrsVersionStatusMap)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemporaryConstraint) DeepCopyInto(out *TemporaryConstraint) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemporaryConstraint.
func (in *TemporaryConstraint) DeepCopy() *TemporaryConstraint {
	if in == nil {
		return nil
	}
	out := new(TemporaryConstraint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TemporaryConstraint) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemporaryConstraintList) DeepCopyInto(out *TemporaryConstraintList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TemporaryConstraint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemporaryConstraintList.
func (in *TemporaryConstraintList) DeepCopy() *TemporaryConstraintList {
	if in == nil {
		return nil
	}
	out := new(TemporaryConstraintList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TemporaryConstraintList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemporaryConstraintRule) DeepCopyInto(out *TemporaryConstraintRule) {
	*out = *in
	if in.NodeAffinity != nil {
		in, out := &in.NodeAffinity, &out.NodeAffinity
		*out = new(corev1.NodeAffinity)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemporaryConstraintRule.
func (in *TemporaryConstraintRule) DeepCopy() *TemporaryConstraintRule {
	if in == nil {
		return nil
	}
	out := new(TemporaryConstraintRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemporaryConstraintSpec) DeepCopyInto(out *TemporaryConstraintSpec) {
	*out = *in
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(TemporaryConstraintRule)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemporaryConstraintSpec.
func (in *TemporaryConstraintSpec) DeepCopy() *TemporaryConstraintSpec {
	if in == nil {
		return nil
	}
	out := new(TemporaryConstraintSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemporaryConstraintStatus) DeepCopyInto(out *TemporaryConstraintStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemporaryConstraintStatus.
func (in *TemporaryConstraintStatus) DeepCopy() *TemporaryConstraintStatus {
	if in == nil {
		return nil
	}
	out := new(TemporaryConstraintStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ulimit) DeepCopyInto(out *Ulimit) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ulimit.
func (in *Ulimit) DeepCopy() *Ulimit {
	if in == nil {
		return nil
	}
	out := new(Ulimit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VersionPlan) DeepCopyInto(out *VersionPlan) {
	*out = *in
	in.SignedVersionPlan.DeepCopyInto(&out.SignedVersionPlan)
	in.BroadcastPlan.DeepCopyInto(&out.BroadcastPlan)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VersionPlan.
func (in *VersionPlan) DeepCopy() *VersionPlan {
	if in == nil {
		return nil
	}
	out := new(VersionPlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcSlbPublisherConf) DeepCopyInto(out *VpcSlbPublisherConf) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcSlbPublisherConf.
func (in *VpcSlbPublisherConf) DeepCopy() *VpcSlbPublisherConf {
	if in == nil {
		return nil
	}
	out := new(VpcSlbPublisherConf)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerCondition) DeepCopyInto(out *WorkerCondition) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerCondition.
func (in *WorkerCondition) DeepCopy() *WorkerCondition {
	if in == nil {
		return nil
	}
	out := new(WorkerCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNode) DeepCopyInto(out *WorkerNode) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNode.
func (in *WorkerNode) DeepCopy() *WorkerNode {
	if in == nil {
		return nil
	}
	out := new(WorkerNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkerNode) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeList) DeepCopyInto(out *WorkerNodeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkerNode, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeList.
func (in *WorkerNodeList) DeepCopy() *WorkerNodeList {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkerNodeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeSpec) DeepCopyInto(out *WorkerNodeSpec) {
	*out = *in
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(metav1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	in.VersionPlan.DeepCopyInto(&out.VersionPlan)
	if in.DependencyReady != nil {
		in, out := &in.DependencyReady, &out.DependencyReady
		*out = new(bool)
		**out = **in
	}
	out.BackupOfPod = in.BackupOfPod
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeSpec.
func (in *WorkerNodeSpec) DeepCopy() *WorkerNodeSpec {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerNodeStatus) DeepCopyInto(out *WorkerNodeStatus) {
	*out = *in
	out.AllocatorSyncedStatus = in.AllocatorSyncedStatus
	in.HealthCondition.DeepCopyInto(&out.HealthCondition)
	if in.ServiceConditions != nil {
		in, out := &in.ServiceConditions, &out.ServiceConditions
		*out = make([]ServiceCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]WorkerCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.SlotID = in.SlotID
	in.WorkerStateChangeRecoder.DeepCopyInto(&out.WorkerStateChangeRecoder)
	in.PodStandbyStatus.DeepCopyInto(&out.PodStandbyStatus)
	if in.RestartRecords != nil {
		in, out := &in.RestartRecords, &out.RestartRecords
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerNodeStatus.
func (in *WorkerNodeStatus) DeepCopy() *WorkerNodeStatus {
	if in == nil {
		return nil
	}
	out := new(WorkerNodeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerSchedulePlan) DeepCopyInto(out *WorkerSchedulePlan) {
	*out = *in
	if in.BrokenRecoverQuotaConfig != nil {
		in, out := &in.BrokenRecoverQuotaConfig, &out.BrokenRecoverQuotaConfig
		*out = new(BrokenRecoverQuotaConfig)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerSchedulePlan.
func (in *WorkerSchedulePlan) DeepCopy() *WorkerSchedulePlan {
	if in == nil {
		return nil
	}
	out := new(WorkerSchedulePlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerStateChangeRecoder) DeepCopyInto(out *WorkerStateChangeRecoder) {
	*out = *in
	if in.LastServiceReadyTime != nil {
		in, out := &in.LastServiceReadyTime, &out.LastServiceReadyTime
		*out = new(int64)
		**out = **in
	}
	in.LastUpdateStatusTime.DeepCopyInto(&out.LastUpdateStatusTime)
	in.BecomeCurrentTime.DeepCopyInto(&out.BecomeCurrentTime)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerStateChangeRecoder.
func (in *WorkerStateChangeRecoder) DeepCopy() *WorkerStateChangeRecoder {
	if in == nil {
		return nil
	}
	out := new(WorkerStateChangeRecoder)
	in.DeepCopyInto(out)
	return out
}
