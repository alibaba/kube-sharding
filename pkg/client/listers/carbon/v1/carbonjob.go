/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/alibaba/kube-sharding/pkg/apis/carbon/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CarbonJobLister helps list CarbonJobs.
type CarbonJobLister interface {
	// List lists all CarbonJobs in the indexer.
	List(selector labels.Selector) (ret []*v1.CarbonJob, err error)
	// CarbonJobs returns an object that can list and get CarbonJobs.
	CarbonJobs(namespace string) CarbonJobNamespaceLister
	CarbonJobListerExpansion
}

// carbonJobLister implements the CarbonJobLister interface.
type carbonJobLister struct {
	indexer cache.Indexer
}

// NewCarbonJobLister returns a new CarbonJobLister.
func NewCarbonJobLister(indexer cache.Indexer) CarbonJobLister {
	return &carbonJobLister{indexer: indexer}
}

// List lists all CarbonJobs in the indexer.
func (s *carbonJobLister) List(selector labels.Selector) (ret []*v1.CarbonJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.CarbonJob))
	})
	return ret, err
}

// CarbonJobs returns an object that can list and get CarbonJobs.
func (s *carbonJobLister) CarbonJobs(namespace string) CarbonJobNamespaceLister {
	return carbonJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CarbonJobNamespaceLister helps list and get CarbonJobs.
type CarbonJobNamespaceLister interface {
	// List lists all CarbonJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.CarbonJob, err error)
	// Get retrieves the CarbonJob from the indexer for a given namespace and name.
	Get(name string) (*v1.CarbonJob, error)
	CarbonJobNamespaceListerExpansion
}

// carbonJobNamespaceLister implements the CarbonJobNamespaceLister
// interface.
type carbonJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CarbonJobs in the indexer for a given namespace.
func (s carbonJobNamespaceLister) List(selector labels.Selector) (ret []*v1.CarbonJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.CarbonJob))
	})
	return ret, err
}

// Get retrieves the CarbonJob from the indexer for a given namespace and name.
func (s carbonJobNamespaceLister) Get(name string) (*v1.CarbonJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("carbonjob"), name)
	}
	return obj.(*v1.CarbonJob), nil
}
