// Code generated by MockGen. DO NOT EDIT.
// Source: healthchecktask.go

// Package mock_healthcheck is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	common "github.com/alibaba/kube-sharding/common"
	v1 "github.com/alibaba/kube-sharding/pkg/apis/carbon/v1"
)

// MockHealthCheckHelper is a mock of HealthCheckHelper interface
type MockHelper struct {
	ctrl     *gomock.Controller
	recorder *MockHelperMockRecorder
}

// MockHealthCheckHelperMockRecorder is the mock recorder for MockHealthCheckHelper
type MockHelperMockRecorder struct {
	mock *MockHelper
}

// NewMockHealthCheckHelper creates a new mock instance
func NewMockHelper(ctrl *gomock.Controller) *MockHelper {
	mock := &MockHelper{ctrl: ctrl}
	mock.recorder = &MockHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHelper) EXPECT() *MockHelperMockRecorder {
	return m.recorder
}

// Sync mocks base method
func (m *MockHelper) Sync(workernode *v1.WorkerNode, healthCondition *v1.HealthCondition) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Sync", workernode, healthCondition)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Sync indicates an expected call of Sync
func (mr *MockHelperMockRecorder) Sync(workernode, healthCondition interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sync", reflect.TypeOf((*MockHelper)(nil).Sync), workernode, healthCondition)
}

func (m *MockHelper) GetWorkerNode(workernode *v1.WorkerNode) (*v1.WorkerNode, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWorkerNode", workernode)
	ret0, _ := ret[0].(*v1.WorkerNode)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (mr *MockHelperMockRecorder) GetWorkerNode(workernode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWorkerNode", reflect.TypeOf((*MockHelper)(nil).GetWorkerNode), workernode)
}

// GetHttpClient mocks base method
func (m *MockHelper) GetHTTPClient() *common.HTTPClient {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHttpClient")
	ret0, _ := ret[0].(*common.HTTPClient)
	return ret0
}

// GetHttpClient indicates an expected call of GetHttpClient
func (mr *MockHelperMockRecorder) GetHTTPClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHttpClient", reflect.TypeOf((*MockHelper)(nil).GetHTTPClient))
}
