// Code generated by MockGen. DO NOT EDIT.
// Source: worker_adjuster.go

// Package mock_worker is a generated GoMock package.
package worker

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/alibaba/kube-sharding/pkg/apis/carbon/v1"
)

// MockworkerAdjuster is a mock of workerAdjuster interface
type MockworkerAdjuster struct {
	ctrl     *gomock.Controller
	recorder *MockworkerAdjusterMockRecorder
}

// MockworkerAdjusterMockRecorder is the mock recorder for MockworkerAdjuster
type MockworkerAdjusterMockRecorder struct {
	mock *MockworkerAdjuster
}

// NewMockworkerAdjuster creates a new mock instance
func NewMockworkerAdjuster(ctrl *gomock.Controller) *MockworkerAdjuster {
	mock := &MockworkerAdjuster{ctrl: ctrl}
	mock.recorder = &MockworkerAdjusterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockworkerAdjuster) EXPECT() *MockworkerAdjusterMockRecorder {
	return m.recorder
}

// adjust mocks base method
func (m *MockworkerAdjuster) adjust() (*v1.WorkerNode, *v1.WorkerNode, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "adjust")
	ret0, _ := ret[0].(*v1.WorkerNode)
	ret1, _ := ret[1].(*v1.WorkerNode)
	ret2, _ := ret[2].(bool)
	ret3, _ := ret[3].(error)
	return ret0, ret1, ret2, ret3
}

// adjust indicates an expected call of adjust
func (mr *MockworkerAdjusterMockRecorder) adjust() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "adjust", reflect.TypeOf((*MockworkerAdjuster)(nil).adjust))
}
